syntax = "proto3";

package saas.v1alpha1;

option go_package = "github.com/cisco-eti/phoenix-saas-be/api/saas/v1alpha1";

import "buf/validate/validate.proto";
import "core/v1alpha1/object.proto";
import "google/api/annotations.proto";
import "saas/v1alpha1/record_id.proto";
import "saas/v1alpha1/record_id_response.proto";

message PushRecordRequest {
  oneof repository {
    string repository_id = 1 [(buf.validate.field).string.uuid = true];
    string repository_name = 2 [
      (buf.validate.field).string.pattern = "^[a-z0-9_-]+(/[a-z0-9_-]+)*$",
      (buf.validate.field).string.max_len = 100
    ];
  }
  string organization_name = 3 [
    (buf.validate.field).string.max_len = 100
  ];
  core.v1alpha1.Object model = 4;
}

message PushRecordResponse {
  RecordIdentifierResponse id = 1;
}

message PullRecordRequest {
  RecordIdentifier id = 1;
}

message PullRecordResponse {
  core.v1alpha1.Object model = 1;
}

// This API is primarily intended for use by CLI tools. Implementations of these APIs should interact with the Agent Directory service to perform their operations.
service AgentDirService {
  rpc PushRecord(stream PushRecordRequest) returns (PushRecordResponse) {
    option (google.api.http) = {
      post: "/v1alpha1/records/push"
      body: "*"
    };
  }
  rpc PullRecord(PullRecordRequest) returns (stream PullRecordResponse) {
    option (google.api.http) = {get: "/v1alpha1/records/pull/{id.digest}"};
  }

}
