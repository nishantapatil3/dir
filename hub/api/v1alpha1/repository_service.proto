syntax = "proto3";

package saas.v1alpha1;

option go_package = "github.com/cisco-eti/phoenix-saas-be/api/saas/v1alpha1";


import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "saas/v1alpha1/order_param.proto";
import "saas/v1alpha1/paginated_response.proto";
import "saas/v1alpha1/pagination_param.proto";
import "saas/v1alpha1/repository.proto";
import "saas/v1alpha1/repository_id.proto";
import "saas/v1alpha1/record.proto";
import "saas/v1alpha1/timestamp_range.proto";

message RecordFilterParam {
  optional string version = 1;
  repeated string category_ids = 2;
}

message RepositoryFilterParam {
  repeated string ids = 1;
  repeated string names = 2;
  repeated string category_ids = 3;
  optional string description = 4;
  optional string search_query = 5;
  optional bool show_private = 6;
  repeated string extension_names = 7;
  repeated string locator_types = 8;
  optional TimestampRange created_at = 9;
}

message ListRepositoriesRequest {
  PaginationParam pagination = 1;
  OrderParam order = 2;
  RepositoryFilterParam filters = 3;
  bool include_records = 4;
  string records_filter = 5;
  optional bool not_empty = 6;
  optional bool owned_only = 7;
  optional string organization_id = 8;
}

message ListRepositoriesResponse {
  PaginatedResponse paginated_response = 1;
  repeated Repository repositories = 2;
}

message GetRepositoryRequest {
  RepositoryIdentifier id = 1;
  bool include_records = 2;
  string records_filter = 3;
}

message GetRepositoryResponse {
  Repository repository = 1;
}

message ListRecordsRequest {
  RepositoryIdentifier id = 1;
  PaginationParam pagination = 2;
  OrderParam order = 3;
  RecordFilterParam filters = 4;
}

message ListRecordsResponse {
  PaginatedResponse paginated_response = 1;
  repeated Record records = 2;
}

message CreateRepositoryRequest {
  string name = 1 [
    (buf.validate.field).string.pattern = "^[a-z0-9_-]+(/[a-z0-9_-]+)*$",
    (buf.validate.field).string.max_len = 100
  ];
  string verification_type = 2 [(buf.validate.field).string.pattern = "^[a-zA-Z0-9 ]*$"];
  optional RepositoryPrivacySettings privacy_settings = 3;
  string organization_id = 4 [(buf.validate.field).string.uuid = true];
}

message RepositoryPrivacySettings {
  bool private = 1;
}

message UpdateRepositoryRequest {
  RepositoryIdentifier id = 1;
  optional string name = 2 [
    (buf.validate.field).string.pattern = "^[a-z0-9_-]+(/[a-z0-9_-]+)*$",
    (buf.validate.field).string.max_len = 100
  ];
  optional RepositoryPrivacySettings privacy_settings = 3;
}

message UpdateRepositoryResponse {}

message DeleteRepositoryRequest {
  RepositoryIdentifier id = 1;
}

message DeleteRepositoryResponse {}

message CreateRepositoryResponse {
  string id = 1;
}

service RepositoryService {
  rpc ListRepositories(ListRepositoriesRequest) returns (ListRepositoriesResponse) {
    option (google.api.http) = {get: "/v1alpha1/repositories"};
  }

  rpc GetRepository(GetRepositoryRequest) returns (GetRepositoryResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/repositories/{id.db_id}"
      additional_bindings: {get: "/v1alpha1/repositories/n/{id.name}"}
    };
  }

  rpc ListRecords(ListRecordsRequest) returns (ListRecordsResponse) {
    option (google.api.http) = {
      get: "/v1alpha1/repositories/{id.db_id}/records"
      additional_bindings: {get: "/v1alpha1/repositories/n/{id.name}/records"}
    };
  }

  rpc CreateRepository(CreateRepositoryRequest) returns (CreateRepositoryResponse) {
    option (google.api.http) = {
      post: "/v1alpha1/repositories"
      body: "*"
    };
  }

  rpc UpdateRepository(UpdateRepositoryRequest) returns (UpdateRepositoryResponse) {
    option (google.api.http) = {
      put: "/v1alpha1/repositories/{id.db_id}"
      body: "*"
      additional_bindings: {put: "/v1alpha1/repositories/n/{id.name}"}
    };
  }

  rpc DeleteRepository(DeleteRepositoryRequest) returns (DeleteRepositoryResponse) {
    option (google.api.http) = {
      delete: "/v1alpha1/repositories/{id.db_id}"
      additional_bindings: {delete: "/v1alpha1/repositories/n/{id.name}"}
    };
  }
}
