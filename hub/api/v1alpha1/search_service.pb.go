// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: saas/v1alpha1/search_service.proto

package saasv1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordFetch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created []*Record `protobuf:"bytes,1,rep,name=created,proto3" json:"created,omitempty"`
	Updated []*Record `protobuf:"bytes,2,rep,name=updated,proto3" json:"updated,omitempty"`
	Deleted []*Record `protobuf:"bytes,3,rep,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *RecordFetch) Reset() {
	*x = RecordFetch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saas_v1alpha1_search_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordFetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordFetch) ProtoMessage() {}

func (x *RecordFetch) ProtoReflect() protoreflect.Message {
	mi := &file_saas_v1alpha1_search_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordFetch.ProtoReflect.Descriptor instead.
func (*RecordFetch) Descriptor() ([]byte, []int) {
	return file_saas_v1alpha1_search_service_proto_rawDescGZIP(), []int{0}
}

func (x *RecordFetch) GetCreated() []*Record {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *RecordFetch) GetUpdated() []*Record {
	if x != nil {
		return x.Updated
	}
	return nil
}

func (x *RecordFetch) GetDeleted() []*Record {
	if x != nil {
		return x.Deleted
	}
	return nil
}

type FetchRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordTypes     []string        `protobuf:"bytes,1,rep,name=record_types,json=recordTypes,proto3" json:"record_types,omitempty"` //agent,mcp,a2a
	TimeRange       *TimestampRange `protobuf:"bytes,2,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	OrganizationIds []string        `protobuf:"bytes,3,rep,name=organization_ids,json=organizationIds,proto3" json:"organization_ids,omitempty"`
}

func (x *FetchRecordsRequest) Reset() {
	*x = FetchRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saas_v1alpha1_search_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRecordsRequest) ProtoMessage() {}

func (x *FetchRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saas_v1alpha1_search_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRecordsRequest.ProtoReflect.Descriptor instead.
func (*FetchRecordsRequest) Descriptor() ([]byte, []int) {
	return file_saas_v1alpha1_search_service_proto_rawDescGZIP(), []int{1}
}

func (x *FetchRecordsRequest) GetRecordTypes() []string {
	if x != nil {
		return x.RecordTypes
	}
	return nil
}

func (x *FetchRecordsRequest) GetTimeRange() *TimestampRange {
	if x != nil {
		return x.TimeRange
	}
	return nil
}

func (x *FetchRecordsRequest) GetOrganizationIds() []string {
	if x != nil {
		return x.OrganizationIds
	}
	return nil
}

type FetchRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agents *RecordFetch `protobuf:"bytes,1,opt,name=agents,proto3,oneof" json:"agents,omitempty"`
	Mcp    *RecordFetch `protobuf:"bytes,2,opt,name=mcp,proto3,oneof" json:"mcp,omitempty"`
	A2A    *RecordFetch `protobuf:"bytes,3,opt,name=a2a,proto3,oneof" json:"a2a,omitempty"`
}

func (x *FetchRecordsResponse) Reset() {
	*x = FetchRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saas_v1alpha1_search_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRecordsResponse) ProtoMessage() {}

func (x *FetchRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saas_v1alpha1_search_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRecordsResponse.ProtoReflect.Descriptor instead.
func (*FetchRecordsResponse) Descriptor() ([]byte, []int) {
	return file_saas_v1alpha1_search_service_proto_rawDescGZIP(), []int{2}
}

func (x *FetchRecordsResponse) GetAgents() *RecordFetch {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *FetchRecordsResponse) GetMcp() *RecordFetch {
	if x != nil {
		return x.Mcp
	}
	return nil
}

func (x *FetchRecordsResponse) GetA2A() *RecordFetch {
	if x != nil {
		return x.A2A
	}
	return nil
}

var File_saas_v1alpha1_search_service_proto protoreflect.FileDescriptor

var file_saas_v1alpha1_search_service_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x61, 0x61, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x1a, 0x1a, 0x73, 0x61, 0x61, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x23, 0x73, 0x61, 0x61, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x13, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x14,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x48, 0x00, 0x52, 0x06, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a,
	0x03, 0x6d, 0x63, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x61, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x46, 0x65, 0x74, 0x63, 0x68, 0x48, 0x01, 0x52, 0x03, 0x6d, 0x63, 0x70, 0x88, 0x01, 0x01,
	0x12, 0x31, 0x0a, 0x03, 0x61, 0x32, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x46, 0x65, 0x74, 0x63, 0x68, 0x48, 0x02, 0x52, 0x03, 0x61, 0x32, 0x61,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x6d, 0x63, 0x70, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x61, 0x32, 0x61, 0x32, 0x68,
	0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x57, 0x0a, 0x0c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x22, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xc1, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d,
	0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42, 0x12,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x69, 0x73, 0x63, 0x6f, 0x2d, 0x65, 0x74, 0x69, 0x2f, 0x70, 0x68, 0x6f, 0x65, 0x6e,
	0x69, 0x78, 0x2d, 0x73, 0x61, 0x61, 0x73, 0x2d, 0x62, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73,
	0x61, 0x61, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b, 0x73, 0x61, 0x61,
	0x73, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa,
	0x02, 0x0d, 0x53, 0x61, 0x61, 0x73, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca,
	0x02, 0x0d, 0x53, 0x61, 0x61, 0x73, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2,
	0x02, 0x19, 0x53, 0x61, 0x61, 0x73, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x53, 0x61,
	0x61, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_saas_v1alpha1_search_service_proto_rawDescOnce sync.Once
	file_saas_v1alpha1_search_service_proto_rawDescData = file_saas_v1alpha1_search_service_proto_rawDesc
)

func file_saas_v1alpha1_search_service_proto_rawDescGZIP() []byte {
	file_saas_v1alpha1_search_service_proto_rawDescOnce.Do(func() {
		file_saas_v1alpha1_search_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_saas_v1alpha1_search_service_proto_rawDescData)
	})
	return file_saas_v1alpha1_search_service_proto_rawDescData
}

var file_saas_v1alpha1_search_service_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_saas_v1alpha1_search_service_proto_goTypes = []interface{}{
	(*RecordFetch)(nil),          // 0: saas.v1alpha1.RecordFetch
	(*FetchRecordsRequest)(nil),  // 1: saas.v1alpha1.FetchRecordsRequest
	(*FetchRecordsResponse)(nil), // 2: saas.v1alpha1.FetchRecordsResponse
	(*Record)(nil),               // 3: saas.v1alpha1.Record
	(*TimestampRange)(nil),       // 4: saas.v1alpha1.TimestampRange
}
var file_saas_v1alpha1_search_service_proto_depIdxs = []int32{
	3, // 0: saas.v1alpha1.RecordFetch.created:type_name -> saas.v1alpha1.Record
	3, // 1: saas.v1alpha1.RecordFetch.updated:type_name -> saas.v1alpha1.Record
	3, // 2: saas.v1alpha1.RecordFetch.deleted:type_name -> saas.v1alpha1.Record
	4, // 3: saas.v1alpha1.FetchRecordsRequest.time_range:type_name -> saas.v1alpha1.TimestampRange
	0, // 4: saas.v1alpha1.FetchRecordsResponse.agents:type_name -> saas.v1alpha1.RecordFetch
	0, // 5: saas.v1alpha1.FetchRecordsResponse.mcp:type_name -> saas.v1alpha1.RecordFetch
	0, // 6: saas.v1alpha1.FetchRecordsResponse.a2a:type_name -> saas.v1alpha1.RecordFetch
	1, // 7: saas.v1alpha1.SearchService.FetchRecords:input_type -> saas.v1alpha1.FetchRecordsRequest
	2, // 8: saas.v1alpha1.SearchService.FetchRecords:output_type -> saas.v1alpha1.FetchRecordsResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_saas_v1alpha1_search_service_proto_init() }
func file_saas_v1alpha1_search_service_proto_init() {
	if File_saas_v1alpha1_search_service_proto != nil {
		return
	}
	file_saas_v1alpha1_record_proto_init()
	file_saas_v1alpha1_timestamp_range_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_saas_v1alpha1_search_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordFetch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saas_v1alpha1_search_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saas_v1alpha1_search_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_saas_v1alpha1_search_service_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_saas_v1alpha1_search_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_saas_v1alpha1_search_service_proto_goTypes,
		DependencyIndexes: file_saas_v1alpha1_search_service_proto_depIdxs,
		MessageInfos:      file_saas_v1alpha1_search_service_proto_msgTypes,
	}.Build()
	File_saas_v1alpha1_search_service_proto = out.File
	file_saas_v1alpha1_search_service_proto_rawDesc = nil
	file_saas_v1alpha1_search_service_proto_goTypes = nil
	file_saas_v1alpha1_search_service_proto_depIdxs = nil
}
