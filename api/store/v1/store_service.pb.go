// Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: store/v1/store_service.proto

package storev1

import (
	v1 "github.com/agntcy/dir/api/core/v1"
	v11 "github.com/agntcy/dir/api/sign/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PushWithOptionsRequest represents a record with optional OCI artifacts for push operations.
type PushWithOptionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Record to be stored
	Record *v1.Record `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	// Push options containing optional flags
	Options       *PushOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushWithOptionsRequest) Reset() {
	*x = PushWithOptionsRequest{}
	mi := &file_store_v1_store_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushWithOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushWithOptionsRequest) ProtoMessage() {}

func (x *PushWithOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_store_v1_store_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushWithOptionsRequest.ProtoReflect.Descriptor instead.
func (*PushWithOptionsRequest) Descriptor() ([]byte, []int) {
	return file_store_v1_store_service_proto_rawDescGZIP(), []int{0}
}

func (x *PushWithOptionsRequest) GetRecord() *v1.Record {
	if x != nil {
		return x.Record
	}
	return nil
}

func (x *PushWithOptionsRequest) GetOptions() *PushOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// PushOptions contains optional flags for push operations.
type PushOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional flag to sign the record and include signature in the push operation
	Sign *bool `protobuf:"varint,1,opt,name=sign,proto3,oneof" json:"sign,omitempty"`
	// Optional signature provider to use for signing the record
	SignatureProvider *v11.SignRequestProvider `protobuf:"bytes,2,opt,name=signature_provider,json=signatureProvider,proto3,oneof" json:"signature_provider,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *PushOptions) Reset() {
	*x = PushOptions{}
	mi := &file_store_v1_store_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushOptions) ProtoMessage() {}

func (x *PushOptions) ProtoReflect() protoreflect.Message {
	mi := &file_store_v1_store_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushOptions.ProtoReflect.Descriptor instead.
func (*PushOptions) Descriptor() ([]byte, []int) {
	return file_store_v1_store_service_proto_rawDescGZIP(), []int{1}
}

func (x *PushOptions) GetSign() bool {
	if x != nil && x.Sign != nil {
		return *x.Sign
	}
	return false
}

func (x *PushOptions) GetSignatureProvider() *v11.SignRequestProvider {
	if x != nil {
		return x.SignatureProvider
	}
	return nil
}

// PushWithOptionsResponse is returned after successfully storing a record with options.
type PushWithOptionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Reference to the stored record
	RecordRef     *v1.RecordRef `protobuf:"bytes,1,opt,name=record_ref,json=recordRef,proto3" json:"record_ref,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PushWithOptionsResponse) Reset() {
	*x = PushWithOptionsResponse{}
	mi := &file_store_v1_store_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PushWithOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushWithOptionsResponse) ProtoMessage() {}

func (x *PushWithOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_v1_store_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushWithOptionsResponse.ProtoReflect.Descriptor instead.
func (*PushWithOptionsResponse) Descriptor() ([]byte, []int) {
	return file_store_v1_store_service_proto_rawDescGZIP(), []int{2}
}

func (x *PushWithOptionsResponse) GetRecordRef() *v1.RecordRef {
	if x != nil {
		return x.RecordRef
	}
	return nil
}

// PullWithOptionsRequest represents a record with optional flags for pull operations.
type PullWithOptionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Record reference to be fetched
	RecordRef *v1.RecordRef `protobuf:"bytes,1,opt,name=record_ref,json=recordRef,proto3" json:"record_ref,omitempty"`
	// Pull options containing optional flags
	Options       *PullOptions `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullWithOptionsRequest) Reset() {
	*x = PullWithOptionsRequest{}
	mi := &file_store_v1_store_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullWithOptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullWithOptionsRequest) ProtoMessage() {}

func (x *PullWithOptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_store_v1_store_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullWithOptionsRequest.ProtoReflect.Descriptor instead.
func (*PullWithOptionsRequest) Descriptor() ([]byte, []int) {
	return file_store_v1_store_service_proto_rawDescGZIP(), []int{3}
}

func (x *PullWithOptionsRequest) GetRecordRef() *v1.RecordRef {
	if x != nil {
		return x.RecordRef
	}
	return nil
}

func (x *PullWithOptionsRequest) GetOptions() *PullOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// PullOptions contains optional flags for pull operations.
type PullOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullOptions) Reset() {
	*x = PullOptions{}
	mi := &file_store_v1_store_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullOptions) ProtoMessage() {}

func (x *PullOptions) ProtoReflect() protoreflect.Message {
	mi := &file_store_v1_store_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullOptions.ProtoReflect.Descriptor instead.
func (*PullOptions) Descriptor() ([]byte, []int) {
	return file_store_v1_store_service_proto_rawDescGZIP(), []int{4}
}

// PullWithOptionsResponse contains a record.
type PullWithOptionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Stored record
	Record        *v1.Record `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PullWithOptionsResponse) Reset() {
	*x = PullWithOptionsResponse{}
	mi := &file_store_v1_store_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PullWithOptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullWithOptionsResponse) ProtoMessage() {}

func (x *PullWithOptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_v1_store_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullWithOptionsResponse.ProtoReflect.Descriptor instead.
func (*PullWithOptionsResponse) Descriptor() ([]byte, []int) {
	return file_store_v1_store_service_proto_rawDescGZIP(), []int{5}
}

func (x *PullWithOptionsResponse) GetRecord() *v1.Record {
	if x != nil {
		return x.Record
	}
	return nil
}

var File_store_v1_store_service_proto protoreflect.FileDescriptor

var file_store_v1_store_service_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x73, 0x69, 0x67, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x16, 0x50, 0x75, 0x73, 0x68, 0x57,
	0x69, 0x74, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x0b,
	0x50, 0x75, 0x73, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x01,
	0x52, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x42,
	0x15, 0x0a, 0x13, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x4c, 0x0a, 0x17, 0x50, 0x75, 0x73, 0x68, 0x57, 0x69,
	0x74, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x66, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x66, 0x22, 0x7c, 0x0a, 0x16, 0x50, 0x75, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31,
	0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x66, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x66, 0x12, 0x2f, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75,
	0x6c, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x75, 0x6c, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x42, 0x0a, 0x17, 0x50, 0x75, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x06, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x32, 0x97, 0x03, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x0f,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a,
	0x12, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x66, 0x28, 0x01, 0x30, 0x01, 0x12, 0x2f, 0x0a, 0x04, 0x50, 0x75, 0x6c, 0x6c, 0x12,
	0x12, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x66, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x28, 0x01, 0x30, 0x01, 0x12, 0x35, 0x0a, 0x06, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x12, 0x12, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x66, 0x1a, 0x13, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x28, 0x01, 0x30, 0x01, 0x12,
	0x36, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x66, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x01, 0x12, 0x5a, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x57,
	0x69, 0x74, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x57, 0x69, 0x74, 0x68,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x5a, 0x0a, 0x0f, 0x50, 0x75, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42,
	0x8e, 0x01, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x42, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x67, 0x6e, 0x74, 0x63, 0x79, 0x2f, 0x64, 0x69, 0x72, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa, 0x02, 0x08, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x08, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x14,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_store_v1_store_service_proto_rawDescOnce sync.Once
	file_store_v1_store_service_proto_rawDescData []byte
)

func file_store_v1_store_service_proto_rawDescGZIP() []byte {
	file_store_v1_store_service_proto_rawDescOnce.Do(func() {
		file_store_v1_store_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_store_v1_store_service_proto_rawDesc), len(file_store_v1_store_service_proto_rawDesc)))
	})
	return file_store_v1_store_service_proto_rawDescData
}

var file_store_v1_store_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_store_v1_store_service_proto_goTypes = []any{
	(*PushWithOptionsRequest)(nil),  // 0: store.v1.PushWithOptionsRequest
	(*PushOptions)(nil),             // 1: store.v1.PushOptions
	(*PushWithOptionsResponse)(nil), // 2: store.v1.PushWithOptionsResponse
	(*PullWithOptionsRequest)(nil),  // 3: store.v1.PullWithOptionsRequest
	(*PullOptions)(nil),             // 4: store.v1.PullOptions
	(*PullWithOptionsResponse)(nil), // 5: store.v1.PullWithOptionsResponse
	(*v1.Record)(nil),               // 6: core.v1.Record
	(*v11.SignRequestProvider)(nil), // 7: sign.v1.SignRequestProvider
	(*v1.RecordRef)(nil),            // 8: core.v1.RecordRef
	(*v1.RecordMeta)(nil),           // 9: core.v1.RecordMeta
	(*emptypb.Empty)(nil),           // 10: google.protobuf.Empty
}
var file_store_v1_store_service_proto_depIdxs = []int32{
	6,  // 0: store.v1.PushWithOptionsRequest.record:type_name -> core.v1.Record
	1,  // 1: store.v1.PushWithOptionsRequest.options:type_name -> store.v1.PushOptions
	7,  // 2: store.v1.PushOptions.signature_provider:type_name -> sign.v1.SignRequestProvider
	8,  // 3: store.v1.PushWithOptionsResponse.record_ref:type_name -> core.v1.RecordRef
	8,  // 4: store.v1.PullWithOptionsRequest.record_ref:type_name -> core.v1.RecordRef
	4,  // 5: store.v1.PullWithOptionsRequest.options:type_name -> store.v1.PullOptions
	6,  // 6: store.v1.PullWithOptionsResponse.record:type_name -> core.v1.Record
	6,  // 7: store.v1.StoreService.Push:input_type -> core.v1.Record
	8,  // 8: store.v1.StoreService.Pull:input_type -> core.v1.RecordRef
	8,  // 9: store.v1.StoreService.Lookup:input_type -> core.v1.RecordRef
	8,  // 10: store.v1.StoreService.Delete:input_type -> core.v1.RecordRef
	0,  // 11: store.v1.StoreService.PushWithOptions:input_type -> store.v1.PushWithOptionsRequest
	3,  // 12: store.v1.StoreService.PullWithOptions:input_type -> store.v1.PullWithOptionsRequest
	8,  // 13: store.v1.StoreService.Push:output_type -> core.v1.RecordRef
	6,  // 14: store.v1.StoreService.Pull:output_type -> core.v1.Record
	9,  // 15: store.v1.StoreService.Lookup:output_type -> core.v1.RecordMeta
	10, // 16: store.v1.StoreService.Delete:output_type -> google.protobuf.Empty
	2,  // 17: store.v1.StoreService.PushWithOptions:output_type -> store.v1.PushWithOptionsResponse
	5,  // 18: store.v1.StoreService.PullWithOptions:output_type -> store.v1.PullWithOptionsResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_store_v1_store_service_proto_init() }
func file_store_v1_store_service_proto_init() {
	if File_store_v1_store_service_proto != nil {
		return
	}
	file_store_v1_store_service_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_store_v1_store_service_proto_rawDesc), len(file_store_v1_store_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_store_v1_store_service_proto_goTypes,
		DependencyIndexes: file_store_v1_store_service_proto_depIdxs,
		MessageInfos:      file_store_v1_store_service_proto_msgTypes,
	}.Build()
	File_store_v1_store_service_proto = out.File
	file_store_v1_store_service_proto_goTypes = nil
	file_store_v1_store_service_proto_depIdxs = nil
}
